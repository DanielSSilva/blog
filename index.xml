<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Daniel Silva's blog</title><link>https://blog.danielssilva.dev/</link><description>Recent content on Daniel Silva's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 07 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.danielssilva.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>How I've revamped my domain - Part one: From Jekyll to Hugo</title><link>https://blog.danielssilva.dev/draft/how-ive-revamped-my-domain-part-one-from-jekyll-to-hugo/</link><pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/draft/how-ive-revamped-my-domain-part-one-from-jekyll-to-hugo/</guid><description>A small introduction ðŸ”—When I first started blogging back in 2017 (damn it has already been 5 years&amp;hellip;), I created a free blog on WordPress - https://danielsknowledgebase.wordpress.com. It was a really simple and nice way to get started with blogging. As time passed and I kept on writing posts, I noticed that I enjoyed it. For that reason, it seemed reasonable to invest in a custom domain, and in that way also enrich my online presence.</description></item><item><title>Azure pipelines - Adding code coverage and reports to the pipeline</title><link>https://blog.danielssilva.dev/post/azure-pipelines---adding-code-coverage-and-reports-to-the-pipeline/</link><pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/azure-pipelines---adding-code-coverage-and-reports-to-the-pipeline/</guid><description>In the previous post, we&amp;rsquo;ve created a simple pipeline that builds and tests our application. We know that our tests ran successfully, but that&amp;rsquo;s all. We don&amp;rsquo;t actually know how much code we are testing.
What&amp;rsquo;s code coverage ðŸ”—I really like the definition that was given in this stackoverflow post. As mentioned:
Code coverage is a measurement of how many lines/blocks/arcs of your code are executed while the automated tests are running.</description></item><item><title>Azure pipelines - YAML structure and creating simple pipeline for C# project</title><link>https://blog.danielssilva.dev/post/azure-pipelines---yaml-structure-and-creating-simple-pipeline-for-csharp-project/</link><pubDate>Sat, 10 Jul 2021 01:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/azure-pipelines---yaml-structure-and-creating-simple-pipeline-for-csharp-project/</guid><description>Azure pipelines can be created through a GUI or through a YAML file. I will be focusing on the YAML instead of GUI for three main reasons:
It is being favored over the GUI Allows to commit the YAML to a source control, thus allowing versioning Re-usability (will cover it in another post) Schema of the YAML file ðŸ”—Microsoft docs has an extensive explanation about the schema and everything that is supported.</description></item><item><title>A journey through (Azure) Pipelines</title><link>https://blog.danielssilva.dev/post/a-journey-through-azure-pipelines---deploy-faster-with-more-quality-and-confidence/</link><pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/a-journey-through-azure-pipelines---deploy-faster-with-more-quality-and-confidence/</guid><description>UPDATE: This &amp;ldquo;Journey&amp;rdquo; is on pause, as I&amp;rsquo;ve switched positions and I currently don&amp;rsquo;t actively work with Azure Pipelines. ðŸ”—As a first and most broad idea of what a pipeline is, I like to think of it as the filler between developing and delivering your software. A &amp;ldquo;piece&amp;rdquo; that aggregates and performs every necessary action/procedure (or at least most of them) to take your code up to the final product (an app, a library, a website, you name it).</description></item><item><title>Using RaspberryPi as an Azure agent for Pipelines (Part 2)</title><link>https://blog.danielssilva.dev/post/using-raspberry-pi-as-an-azure-agent-for-pipelines-part-2/</link><pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/using-raspberry-pi-as-an-azure-agent-for-pipelines-part-2/</guid><description>In the first part of this series, we have seen how we can setup a self hosted agent (in this case on a Raspberry Pi). To recap, here&amp;rsquo;s a quick list of things required to do on the target host (this is agnostic to the underlying operating system):
Get the latest agent version available (head to the Azure DevOps website &amp;gt; Project settings &amp;gt; Agent Pools &amp;gt; your pool &amp;gt; new agent &amp;gt; download agent) Extract the file Run the config file and specify: Server URL Your PAT Agent pool Agent name Work folder Run the run file or configure as a service.</description></item><item><title>A (very) small introduction to Ansible</title><link>https://blog.danielssilva.dev/post/a-very-small-introduction-to-ansible/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/a-very-small-introduction-to-ansible/</guid><description>While I was writing for my second part of &amp;ldquo;Using RaspberryPi as an Azure agent for Pipelines&amp;rdquo; (you can see the part 1 here) I came across a tedious scenario: I needed to connect to different machines, download some software and perform some configurations, all using the terminal. I&amp;rsquo;m currently using a cluster of 4 raspberry pi as servers/agents/nodes/you name it, and after deploying the software on the first one I thought &amp;ldquo;there must be a better and faster way to achieve this&amp;rdquo;, and it is where Ansible comes into play.</description></item><item><title>Using RaspberryPi as an Azure agent for Pipelines (Part 1)</title><link>https://blog.danielssilva.dev/post/using-raspberry-pi-as-an-azure-agent-for-pipelines/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/using-raspberry-pi-as-an-azure-agent-for-pipelines/</guid><description>I&amp;rsquo;ve recently switched to a DevOps role in a new company. I know some basic DevOps concepts, CI/CD, pipelines, builds, artifacts and so on, but never really laid my hands on it.
I&amp;rsquo;ve been doing a bunch of Microsoft Learn modules related to DevOps and other key components that will be part of my new daily basis.
One that caught my attention was the Host your own build agent in Azure Pipelines, which is a module from the Build applications with Azure DevOps learning path.</description></item><item><title>Automating database backups with Universal Automation and dbatools</title><link>https://blog.danielssilva.dev/post/automating-database-backups-with-universal-automation-and-dbatools/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/automating-database-backups-with-universal-automation-and-dbatools/</guid><description>I&amp;rsquo;ve recently read about Universal Automation (UA), by Ironman Software. Among many other functionalities, it offers you the possibility to run background jobs and schedule your scripts to run at certain times. And that&amp;rsquo;s exactly what we will be exploring today.
Before we start - Let&amp;rsquo;s understand the product naming ðŸ”—This might sound irrelevant for now, but you will understand in a minute why I&amp;rsquo;m mentioning this.
The first time I heard about an Ironman Software product it was the Universal Dashboard (UD).</description></item><item><title>dbatools is not just for DBAs - Import-DbaCsv</title><link>https://blog.danielssilva.dev/post/dbatools-is-not-just-for-dbas---import-dbacsv/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/dbatools-is-not-just-for-dbas---import-dbacsv/</guid><description>The first time I&amp;rsquo;ve heard about dbatools was on its early stages and, although it seemed really interesting, I didn&amp;rsquo;t know anything about PowerShell, nor I had to work with SQL professionally. Moreover, to me it looked like it was &amp;ldquo;focused&amp;rdquo; on helping DBAs (maybe hence its name?). Even though I&amp;rsquo;ve never contributed to the project, I&amp;rsquo;ve always kept an eye on it.
Why do I need it now? Some context ðŸ”—I usually have to analyse logs in order to perform some C#/SQL troubleshooting/debugging/performance tuning.</description></item><item><title>PSConfEU - First time at this event? Let me share something with you</title><link>https://blog.danielssilva.dev/post/psconfeu-first-time-at-this-event-let-me-share-something-with-you/</link><pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/psconfeu-first-time-at-this-event-let-me-share-something-with-you/</guid><description>PSConfEU is the &amp;ldquo;Europeâ€™s largest PowerShell-themed annual conference!&amp;rdquo;. It covers a lot of different topics and brings professionals from all over the world.
&amp;ldquo;In 2020, weâ€™ll have 350 delegate seats again and 40 international speakers&amp;rdquo;
It has talks about DSC, PowerShell internals, Azure, DevOps, IoT and many other areas.
This conference is simply amazing and I&amp;rsquo;m really happy to announce that I will be speaking! Last year was my first time attending and speaking at a conference outside my country, and PSConfEU was the one.</description></item><item><title>Docker/SQL - MODIFY FILE encountered operating system error 31(A device attached to the system is not functioning.) while attempting to expand the physical file</title><link>https://blog.danielssilva.dev/post/modify-file-encountered-operating-system-error-31a-device-attached-to-the-system-is-not-functioning.-while-attempting-to-expand-the-physical-file/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/modify-file-encountered-operating-system-error-31a-device-attached-to-the-system-is-not-functioning.-while-attempting-to-expand-the-physical-file/</guid><description>I use a Mac as my development machine. As you might or might not now, SQL Server is not available for macOS. Instead, you need to use docker and have a container to hold your instance. The whole Docker world is new to me, and every day I&amp;rsquo;m learning more and more things about it.
Recently I was testing my backup/restore procedure and I had this weird error:
MODIFY FILE encountered operating system error 31(A device attached to the system is not functioning.</description></item><item><title>Remote Sessions and notifications</title><link>https://blog.danielssilva.dev/post/remote-sessions-and-notifications/</link><pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/remote-sessions-and-notifications/</guid><description>On my last post, in the very end, I showed you an example of something quite simple that you could do with PowerShell on the RaspberryPi: Show a notification when a LED is left ON.
In this post I will show you how I&amp;rsquo;ve managed to display the notification. This will consist of three sections:
How to display a notification Enabling remote sessions through SSH The final script to display a notification from one device to another Showing a notification ðŸ”—Because @WindosNZ #BurntToast module is awesome, I figured that there was something cool that I could do with it!</description></item><item><title>Getting started with PowerShell (Core) on Raspbian (RaspberryPi)</title><link>https://blog.danielssilva.dev/post/getting-started-with-powershell-core-on-raspbian-raspberrypi/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/getting-started-with-powershell-core-on-raspbian-raspberrypi/</guid><description>Around a year ago, I started to investigate about new usages for my Raspberry Pi 3b . I love the Raspberry, a tiny, credit-card-sized SBC capable of running different operating systems, but most of the projects I found that seemed interesting were highly complex (or at least seemed) and used python, a language that I&amp;rsquo;m not familiar with. Around the same time, I also started to hear a lot about PowerShell (or maybe it caught my attention because I&amp;rsquo;ve started to use it at my work for simple stuff), as a scripting language mainly used (as far as I knew) to automate tasks.</description></item></channel></rss>