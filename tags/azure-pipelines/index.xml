<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure Pipelines on Daniel Silva's blog</title><link>https://blog.danielssilva.dev/tags/azure-pipelines/</link><description>Recent content in Azure Pipelines on Daniel Silva's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 14 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.danielssilva.dev/tags/azure-pipelines/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure pipelines - Adding code coverage and reports to the pipeline</title><link>https://blog.danielssilva.dev/post/azure-pipelines---adding-code-coverage-and-reports-to-the-pipeline/</link><pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/azure-pipelines---adding-code-coverage-and-reports-to-the-pipeline/</guid><description>&lt;p>In the &lt;a href="https://blog.danielssilva.dev/post/azure-pipelines---yaml-structure-and-creating-simple-pipeline-for-csharp-project/">previous post&lt;/a>, we&amp;rsquo;ve created a simple pipeline that builds and tests our application.
We know that our tests ran successfully, but that&amp;rsquo;s all. We don&amp;rsquo;t actually know how much code we are testing.&lt;/p>
&lt;h1 id="whats-code-coverage">What&amp;rsquo;s code coverage &lt;a href="#whats-code-coverage" class="anchor">ðŸ”—&lt;/a>&lt;/h1>&lt;p>I really like the definition that was given in &lt;a href="https://stackoverflow.com/a/195027" target="_blank" rel="noopener">this stackoverflow post&lt;/a>.
As mentioned:&lt;/p>
&lt;blockquote>
&lt;p>Code coverage is a measurement of how many lines/blocks/arcs of your code are executed while the automated tests are running.&lt;/p>
&lt;p>Code coverage is collected by using a specialized tool to instrument the binaries to add tracing calls and run a full set of automated tests against the instrumented product. A good tool will give you not only the percentage of the code that is executed, but also will allow you to drill into the data and see exactly which lines of code were executed during a particular test.&lt;/p></description></item><item><title>Azure pipelines - YAML structure and creating simple pipeline for C# project</title><link>https://blog.danielssilva.dev/post/azure-pipelines---yaml-structure-and-creating-simple-pipeline-for-csharp-project/</link><pubDate>Sat, 10 Jul 2021 01:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/azure-pipelines---yaml-structure-and-creating-simple-pipeline-for-csharp-project/</guid><description>&lt;p>Azure pipelines can be created through a GUI or through a YAML file.
I will be focusing on the YAML instead of GUI for three main reasons:&lt;/p>
&lt;ul>
&lt;li>It is being favored over the GUI&lt;/li>
&lt;li>Allows to commit the YAML to a source control, thus allowing versioning&lt;/li>
&lt;li>Re-usability (will cover it in another post)&lt;/li>
&lt;/ul>
&lt;h1 id="schema-of-the-yaml-file">Schema of the YAML file &lt;a href="#schema-of-the-yaml-file" class="anchor">ðŸ”—&lt;/a>&lt;/h1>&lt;p>&lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&amp;amp;tabs=schema%2Cparameter-schema" target="_blank" rel="noopener">Microsoft docs&lt;/a> has an extensive explanation about the schema and everything that is supported.
This is my go-to when I have questions about schema/features.&lt;/p></description></item><item><title>A journey through (Azure) Pipelines</title><link>https://blog.danielssilva.dev/post/a-journey-through-azure-pipelines---deploy-faster-with-more-quality-and-confidence/</link><pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/a-journey-through-azure-pipelines---deploy-faster-with-more-quality-and-confidence/</guid><description>&lt;h2 id="update-this-journey-is-on-pause-as-ive-switched-positions-and-i-currently-dont-actively-work-with-azure-pipelines">&lt;em>&lt;strong>UPDATE: This &amp;ldquo;Journey&amp;rdquo; is on pause, as I&amp;rsquo;ve switched positions and I currently don&amp;rsquo;t actively work with Azure Pipelines.&lt;/strong>&lt;/em> &lt;a href="#update-this-journey-is-on-pause-as-ive-switched-positions-and-i-currently-dont-actively-work-with-azure-pipelines" class="anchor">ðŸ”—&lt;/a>&lt;/h2>&lt;p>As a first and most broad idea of what a pipeline is, I like to think of it as the filler between developing and delivering your software. A &amp;ldquo;piece&amp;rdquo; that aggregates and performs every necessary action/procedure (or at least most of them) to take your code up to the final product (an app, a library, a website, you name it).
The most amazing part is that it can be as simple as performing a build to ensure that your code compiles, and grow as your needs, ending up being something like:&lt;/p></description></item></channel></rss>