<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL on Daniel Silva's blog</title><link>https://blog.danielssilva.dev/tags/sql/</link><description>Recent content in SQL on Daniel Silva's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 11 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.danielssilva.dev/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>Automating database backups with Universal Automation and dbatools</title><link>https://blog.danielssilva.dev/post/automating-database-backups-with-universal-automation-and-dbatools/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/automating-database-backups-with-universal-automation-and-dbatools/</guid><description>&lt;p>I&amp;rsquo;ve recently read about &lt;a href="https://ironmansoftware.com/universal-automation/" target="_blank" rel="noopener">Universal Automation (UA)&lt;/a>, by &lt;a href="https://ironmansoftware.com/" target="_blank" rel="noopener">Ironman Software&lt;/a>.
Among many other functionalities, it offers you the possibility to run background jobs and schedule your scripts to run at certain times.
And that&amp;rsquo;s exactly what we will be exploring today.&lt;/p>
&lt;h1 id="before-we-start---lets-understand-the-product-naming">Before we start - Let&amp;rsquo;s understand the product naming &lt;a href="#before-we-start---lets-understand-the-product-naming" class="anchor">ðŸ”—&lt;/a>&lt;/h1>&lt;p>This might sound irrelevant for now, but you will understand in a minute why I&amp;rsquo;m mentioning this.&lt;/p>
&lt;p>The first time I heard about an Ironman Software product it was the &lt;a href="https://docs.universaldashboard.io/" target="_blank" rel="noopener">Universal Dashboard (UD)&lt;/a>.
In the meantime, another product surfaced: Universal Automation.&lt;/p></description></item><item><title>dbatools is not just for DBAs - Import-DbaCsv</title><link>https://blog.danielssilva.dev/post/dbatools-is-not-just-for-dbas---import-dbacsv/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.danielssilva.dev/post/dbatools-is-not-just-for-dbas---import-dbacsv/</guid><description>&lt;p>The first time I&amp;rsquo;ve heard about &lt;a href="https://dbatools.io/" target="_blank" rel="noopener">dbatools&lt;/a> was on its early stages and, although it seemed really interesting, I didn&amp;rsquo;t know anything about PowerShell, nor I had to work with SQL professionally.
Moreover, to me it looked like it was &amp;ldquo;focused&amp;rdquo; on helping DBAs (maybe hence its name?).
Even though I&amp;rsquo;ve never contributed to the project, I&amp;rsquo;ve always kept an eye on it.&lt;/p>
&lt;h1 id="why-do-i-need-it-now-some-context">Why do I need it now? Some context &lt;a href="#why-do-i-need-it-now-some-context" class="anchor">ðŸ”—&lt;/a>&lt;/h1>&lt;p>I usually have to analyse logs in order to perform some C#/SQL troubleshooting/debugging/performance tuning.
The approach that I usually take is to use Excel and import the log file as a table, so that I can filter, highlight and so on.&lt;/p></description></item></channel></rss>